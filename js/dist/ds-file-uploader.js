/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("DSFileUploader", [], factory);
	else if(typeof exports === 'object')
		exports["DSFileUploader"] = factory();
	else
		root["DSFileUploader"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./ds-file-uploader.ts":
/*!*****************************!*\
  !*** ./ds-file-uploader.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _models_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/form */ \"./models/form.ts\");\n\r\nvar DSFileUploader = /** @class */ (function () {\r\n    function DSFileUploader(formID, settings) {\r\n        this.args = {};\r\n        var settings = this.processSettings(settings);\r\n        this.form = new _models_form__WEBPACK_IMPORTED_MODULE_0__[\"default\"](formID, settings);\r\n        this.CallBacks = this.form.CallBacks;\r\n    }\r\n    DSFileUploader.prototype.getFileList = function () {\r\n        console.log(\"getFileList\", this.form.files);\r\n        return this.form.files;\r\n    };\r\n    DSFileUploader.prototype.set = function (k, v) {\r\n        this.args[k] = v;\r\n    };\r\n    DSFileUploader.prototype.get = function (k) {\r\n        if (this.args[k])\r\n            return this.args[k];\r\n        else\r\n            return false;\r\n    };\r\n    DSFileUploader.prototype.getDefaultSettings = function () {\r\n        return {\r\n            retries: 10,\r\n            filesLimit: 10,\r\n            fileChunkBytes: 800000,\r\n            uidPrefix: \"no-prefix\",\r\n            folder: \"all-files\",\r\n            //uploadUrl : location.href,\r\n            uploadUrl: location.href,\r\n            customVars: {},\r\n            allowTypes: new Array(),\r\n            requestHeaders: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n    };\r\n    DSFileUploader.prototype.processSettings = function (settings) {\r\n        var defaultSettings = this.getDefaultSettings();\r\n        for (var settingsKey in defaultSettings) {\r\n            if (typeof settings[settingsKey] !== \"undefined\") {\r\n                this.set(settingsKey, settings[settingsKey]);\r\n            }\r\n            else {\r\n                settings[settingsKey] = defaultSettings[settingsKey];\r\n                this.set(settingsKey, defaultSettings[settingsKey]);\r\n            }\r\n        }\r\n        return settings;\r\n    };\r\n    return DSFileUploader;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DSFileUploader);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./ds-file-uploader.ts?");

/***/ }),

/***/ "./models/Uploader.ts":
/*!****************************!*\
  !*** ./models/Uploader.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar Uploader = /** @class */ (function () {\r\n    function Uploader(settings, CallBacks, Messages) {\r\n        this.file = false;\r\n        this.settings = settings;\r\n        this.currentChunk = 0;\r\n        this.CallBacks = CallBacks;\r\n        this.FileReader = false;\r\n        this.Messages = Messages;\r\n    }\r\n    Uploader.prototype.upload = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var res, self, chunkIter, retry, chunkData, input, junkRes, promise;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        res = false;\r\n                        self = this;\r\n                        this.file.status = \"uploading\";\r\n                        this.chunksCount = Math.ceil(this.file.file.size / this.settings.fileChunkBytes);\r\n                        chunkIter = 0;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(chunkIter < this.chunksCount)) return [3 /*break*/, 8];\r\n                        retry = 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!(retry < this.settings.retries)) return [3 /*break*/, 6];\r\n                        this.currentChunk = chunkIter;\r\n                        this.CallBacks.callback(\"file_upload__chunk_start\", { file: this.file, uploader: this });\r\n                        return [4 /*yield*/, this.readChunk()];\r\n                    case 3:\r\n                        chunkData = _a.sent();\r\n                        input = this.makeInput(chunkData);\r\n                        return [4 /*yield*/, this.sendChunk(input)];\r\n                    case 4:\r\n                        junkRes = _a.sent();\r\n                        if (junkRes === true)\r\n                            res = true;\r\n                        // No need for tetry\r\n                        if (res === true)\r\n                            return [3 /*break*/, 6];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        retry++;\r\n                        return [3 /*break*/, 2];\r\n                    case 6:\r\n                        if (res === false)\r\n                            return [3 /*break*/, 8];\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        chunkIter++;\r\n                        return [3 /*break*/, 1];\r\n                    case 8:\r\n                        promise = new Promise(function (resolve, reject) {\r\n                            if (res === true) {\r\n                                self.file.status = \"uploaded\";\r\n                                self.CallBacks.callback(\"file_uploaded\", _this);\r\n                            }\r\n                            else {\r\n                                self.file.status = \"upload_error\";\r\n                                self.CallBacks.callback(\"file_upload_error\", _this);\r\n                                self.Messages.message(\"error\", \"File upload error\", _this);\r\n                            }\r\n                            self.CallBacks.callback(\"file_upload_end\", _this);\r\n                            resolve(res);\r\n                        });\r\n                        return [2 /*return*/, promise];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Uploader.prototype.makeInput = function (base64) {\r\n        var inputs = {\r\n            file: {\r\n                name: this.file.file.name,\r\n                size: this.file.file.size,\r\n                type: this.file.file.type,\r\n                source: this.file.file.source,\r\n                lastModified: this.file.file.lastModified,\r\n            },\r\n            folder: this.settings.folder,\r\n            ds_file_uploader: 1,\r\n            ds_file_uploader__action: \"upload\",\r\n            ds_file_type: \"chunk\",\r\n            currentChunk: this.currentChunk,\r\n            chunksCount: this.chunksCount,\r\n            chunkBase64: base64,\r\n            guid: this.file.guid,\r\n            customVars: false\r\n        };\r\n        if (typeof this.settings.customVars !== \"undefined\" && this.settings.customVars) {\r\n            inputs.customVars = this.settings.customVars;\r\n        }\r\n        return inputs;\r\n    };\r\n    Uploader.prototype.readChunk = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var self, promise;\r\n            return __generator(this, function (_a) {\r\n                self = this;\r\n                promise = new Promise(function (resolve, reject) {\r\n                    var offset = self.settings.fileChunkBytes * self.currentChunk;\r\n                    var length = self.settings.fileChunkBytes;\r\n                    var blob = self.file.file.slice(offset, length + offset);\r\n                    self.FileReader = new FileReader();\r\n                    self.FileReader.file = self.file;\r\n                    self.FileReader.onload = function () {\r\n                        return __awaiter(this, void 0, void 0, function () {\r\n                            var base64;\r\n                            return __generator(this, function (_a) {\r\n                                base64 = btoa(this.result);\r\n                                resolve(base64);\r\n                                return [2 /*return*/];\r\n                            });\r\n                        });\r\n                    };\r\n                    self.FileReader.readAsBinaryString(blob);\r\n                });\r\n                return [2 /*return*/, promise];\r\n            });\r\n        });\r\n    };\r\n    Uploader.prototype.sendChunk = function (inputs) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var self, resolve, promise, uploadUrl, requrestHeaders, rawResponse, content, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        self = this;\r\n                        resolve = function (r) { };\r\n                        promise = new Promise(function (r, reject) {\r\n                            resolve = r;\r\n                        });\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        uploadUrl = this.settings.uploadUrl;\r\n                        requrestHeaders = this.settings.requestHeaders;\r\n                        return [4 /*yield*/, fetch(uploadUrl, {\r\n                                method: 'POST',\r\n                                headers: requrestHeaders,\r\n                                body: JSON.stringify(inputs)\r\n                            })];\r\n                    case 2:\r\n                        rawResponse = _a.sent();\r\n                        return [4 /*yield*/, rawResponse.json()];\r\n                    case 3:\r\n                        content = _a.sent();\r\n                        if (content.status == \"success\") {\r\n                            self.CallBacks.callback(\"chunk_uploaded\", this);\r\n                            resolve(true);\r\n                        }\r\n                        else {\r\n                            self.CallBacks.callback(\"chunk_upload_fail\", this);\r\n                            if (typeof content.message != \"undefined\") {\r\n                                self.file.errorMessage = content.message;\r\n                            }\r\n                            resolve(false);\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        self.CallBacks.callback(\"chunk_upload_fail\", this);\r\n                        console.error(\"uploadFillFile Error\", e_1);\r\n                        resolve(false);\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/, promise];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Uploader;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Uploader);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/Uploader.ts?");

/***/ }),

/***/ "./models/callbacks.ts":
/*!*****************************!*\
  !*** ./models/callbacks.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar CallBacks = /** @class */ (function () {\r\n    function CallBacks() {\r\n        this.callbacks = [];\r\n    }\r\n    CallBacks.prototype.listen = function (action, f) {\r\n        if (typeof this.callbacks[action] === \"undefined\") {\r\n            this.callbacks[action] = [];\r\n        }\r\n        this.callbacks[action].push(f);\r\n    };\r\n    CallBacks.prototype.callback = function (action, data) {\r\n        console.log(\"callback\", action, data);\r\n        if (typeof this.callbacks[action] !== \"undefined\") {\r\n            for (var i in this.callbacks[action]) {\r\n                this.callbacks[action][i](data);\r\n            }\r\n        }\r\n        action = \"onCallBack\";\r\n        if (typeof this.callbacks[action] !== \"undefined\") {\r\n            for (var i in this.callbacks[action]) {\r\n                this.callbacks[action][i]();\r\n            }\r\n        }\r\n    };\r\n    return CallBacks;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CallBacks);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/callbacks.ts?");

/***/ }),

/***/ "./models/file-input.ts":
/*!******************************!*\
  !*** ./models/file-input.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*import FileInput from './file-input';*/\r\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nvar FileInput = /** @class */ (function () {\r\n    function FileInput(obj, settings) {\r\n        this.dom = obj;\r\n        this.settings = settings;\r\n        this.listenEvents();\r\n    }\r\n    FileInput.prototype.listenEvents = function () {\r\n        var onInputFileChange = this.onInputFileChange.bind(this);\r\n        this.dom.addEventListener(\"change\", onInputFileChange);\r\n    };\r\n    FileInput.prototype.onInputFileChange = function () {\r\n        this.files = __spreadArray([], this.dom.files, true);\r\n        if (typeof this.settings.onFileSelection != \"undefined\") {\r\n            var f = this.settings.onFileSelection.bind(this);\r\n            f();\r\n        }\r\n    };\r\n    return FileInput;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FileInput);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/file-input.ts?");

/***/ }),

/***/ "./models/file.ts":
/*!************************!*\
  !*** ./models/file.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar File = /** @class */ (function () {\r\n    function File(file, settings, CallBacks, Uploader, Messages) {\r\n        this.file = file;\r\n        this.ready = false;\r\n        this.uploaded = false;\r\n        this.settings = settings;\r\n        this.guid = this.getGuid();\r\n        this.CallBacks = CallBacks;\r\n        this.Uploader = Uploader;\r\n        this.Uploader.file = this;\r\n        this.status = \"created\";\r\n        this.readFileThumb();\r\n        this.Messages = Messages;\r\n    }\r\n    File.prototype.getGuid = function () {\r\n        var uid = '';\r\n        if (typeof crypto === \"undefined\") {\r\n            uid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n            return this.settings.uidPrefix + '-' + uid;\r\n        }\r\n        else {\r\n            var uid_1 = ('' + [1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {\r\n                return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\r\n            });\r\n            console.log(\"this.settings\", this.settings);\r\n            return this.settings.uidPrefix + '-' + uid_1;\r\n        }\r\n        ;\r\n    };\r\n    File.prototype.delete = function (settings) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var self, resolve, promise, uploadUrl, requrestHeaders, inputs, rawResponse, content, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        self = this;\r\n                        resolve = function (r) { };\r\n                        promise = new Promise(function (r, reject) {\r\n                            resolve = r;\r\n                        });\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 5]);\r\n                        uploadUrl = this.settings.uploadUrl;\r\n                        requrestHeaders = this.settings.requestHeaders;\r\n                        inputs = {\r\n                            folder: this.settings.folder,\r\n                            guid: this.file.guid,\r\n                            customVars: false,\r\n                            ds_file_uploader: 1,\r\n                            ds_file_uploader__action: \"delete\"\r\n                        };\r\n                        if (typeof settings.customVars != \"undefined\") {\r\n                            inputs.customVars = settings.customVars;\r\n                        }\r\n                        return [4 /*yield*/, fetch(uploadUrl, {\r\n                                method: 'POST',\r\n                                headers: requrestHeaders,\r\n                                body: JSON.stringify(inputs)\r\n                            })];\r\n                    case 2:\r\n                        rawResponse = _a.sent();\r\n                        return [4 /*yield*/, rawResponse.json()];\r\n                    case 3:\r\n                        content = _a.sent();\r\n                        if (typeof content.status !== \"undefined\" && content.status === \"success\") {\r\n                            this.file.status = \"deleted\";\r\n                            self.CallBacks.callback(\"delete_success\", this);\r\n                            self.CallBacks.callback(\"delete_end\", this);\r\n                            resolve(true);\r\n                        }\r\n                        else {\r\n                            self.CallBacks.callback(\"delete_error\", this);\r\n                            self.Messages.message(\"error\", \"Delete error\", this);\r\n                            self.CallBacks.callback(\"delete_end\", this);\r\n                            resolve(false);\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        self.CallBacks.callback(\"delete_fail\", this);\r\n                        resolve(false);\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    File.prototype.readFileThumb = function () {\r\n        var file = this.file;\r\n        var self = this;\r\n        file.fileReader = new FileReader();\r\n        file.fileReader.onload = function () {\r\n            if (file.size < 5000000) {\r\n                file.base64 = this.result;\r\n            }\r\n            else {\r\n                file.base64 = false;\r\n            }\r\n            self.ready = true;\r\n            self.status = \"ready\";\r\n            self.CallBacks.callback(\"file_ready\", file);\r\n        };\r\n        setTimeout(function () { file.fileReader.readAsDataURL(file); }, 100);\r\n    };\r\n    File.prototype.upload = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!(this.uploaded === false)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.Uploader.upload()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return File;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (File);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/file.ts?");

/***/ }),

/***/ "./models/form.ts":
/*!************************!*\
  !*** ./models/form.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _file_input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file-input */ \"./models/file-input.ts\");\n/* harmony import */ var _file__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file */ \"./models/file.ts\");\n/* harmony import */ var _callbacks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./callbacks */ \"./models/callbacks.ts\");\n/* harmony import */ var _Uploader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Uploader */ \"./models/Uploader.ts\");\n/* harmony import */ var _messages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./messages */ \"./models/messages.ts\");\n\r\n\r\n\r\n\r\n\r\nvar Form = /** @class */ (function () {\r\n    function Form(formID, settings) {\r\n        this.settings = settings;\r\n        this.formID = formID;\r\n        this.fileInputs = [];\r\n        this.files = [];\r\n        this.findForm();\r\n        this.findFileInputs();\r\n        this.CallBacks = new _callbacks__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n        this.Messages = new _messages__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.CallBacks);\r\n        this.hooks();\r\n    }\r\n    Form.prototype.hooks = function () {\r\n        this.CallBacks.listen(\"file_ready\", function (data) {\r\n            console.log(\"file ready\", data);\r\n        });\r\n        this.CallBacks.listen(\"file_added\", function (data) {\r\n            console.log(\"file ready\", data);\r\n        });\r\n    };\r\n    Form.prototype.findForm = function () {\r\n        var formObject = document.getElementById(this.formID);\r\n        if (!formObject) {\r\n            throw new Error('No form');\r\n        }\r\n        this.formObject = formObject;\r\n    };\r\n    Form.prototype.isAllowed = function (file) {\r\n        var file = file.file;\r\n        if (typeof this.settings.allowTypes === \"undefined\")\r\n            return true;\r\n        var allowTypes = this.settings.allowTypes;\r\n        if (allowTypes.includes(file.type)) {\r\n            this.Messages.message(\"warning\", \"File type \" + file.type + \" is not allowed \", file);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    Form.prototype.isLimit = function () {\r\n        if (typeof this.settings.filesLimit === \"undefined\")\r\n            return false;\r\n        if (this.settings.filesLimit <= this.files.length) {\r\n            console.log(\"File quantity limit\", this.settings.filesLimit + \">=\" + this.files.length);\r\n            this.Messages.message(\"warning\", \"File limit is \" + this.settings.filesLimit, false);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Form.prototype.isAutoUpload = function () {\r\n        if (typeof this.settings.autoUpload === \"undefined\")\r\n            return false;\r\n        else if (this.settings.autoUpload === true) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    Form.prototype.findFileInputs = function () {\r\n        var _this = this;\r\n        var formElements = Array.from(this.formObject.elements);\r\n        var self = this;\r\n        formElements.map(function (element) {\r\n            if (element.getAttribute(\"type\") != \"file\")\r\n                return false;\r\n            else {\r\n                _this.fileInputs.push(new _file_input__WEBPACK_IMPORTED_MODULE_0__[\"default\"](element, {\r\n                    onFileSelection: function () {\r\n                        for (var i in this.files) {\r\n                            if (self.isLimit()) {\r\n                                break;\r\n                            }\r\n                            var file = new _file__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.files[i], self.settings, self.CallBacks, new _Uploader__WEBPACK_IMPORTED_MODULE_3__[\"default\"](self.settings, self.CallBacks, self.Messages), self.Messages);\r\n                            if (self.isAllowed(file) === false) {\r\n                                console.log(\"File is not allowed\", file.file.name);\r\n                                continue;\r\n                            }\r\n                            self.files.push(file);\r\n                            self.CallBacks.callback(\"file_added\", file);\r\n                            if (self.isAutoUpload()) {\r\n                                file.upload();\r\n                            }\r\n                        }\r\n                        console.log(\"self.files\", self.files);\r\n                    }\r\n                }));\r\n            }\r\n        });\r\n    };\r\n    return Form;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Form);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/form.ts?");

/***/ }),

/***/ "./models/messages.ts":
/*!****************************!*\
  !*** ./models/messages.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar Messages = /** @class */ (function () {\r\n    function Messages(CallBacks) {\r\n        this.CallBacks = CallBacks;\r\n        this.messages = [];\r\n    }\r\n    Messages.prototype.cleanMessages = function () {\r\n        this.messages = [];\r\n        this.CallBacks.callback(\"onMessageClean\", this.messages);\r\n        this.CallBacks.callback(\"onMessagesUpdate\", this.messages);\r\n    };\r\n    Messages.prototype.message = function (status, msg, ref) {\r\n        if (typeof ref === \"undefined\")\r\n            ref = false;\r\n        this.messages.push({\r\n            status: status,\r\n            msg: msg,\r\n            ref: ref\r\n        });\r\n        this.CallBacks.callback(\"newMessage\", this.messages);\r\n        this.CallBacks.callback(\"onMessagesUpdate\", this.messages);\r\n    };\r\n    return Messages;\r\n}());\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Messages);\r\n\n\n//# sourceURL=webpack://DSFileUploader/./models/messages.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./ds-file-uploader.ts");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});